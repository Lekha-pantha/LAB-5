#include <stdio.h>
#include <stdlib.h>

void reverse(int arr[], int start, int end) {
    while (start < end) {
        int temp = arr[start];
        arr[start] = arr[end];
        arr[end] = temp;
        start++;
        end--;
    }
}


int next_permutation(int arr[], int n) {
    int k, l;

 
    for (k = n - 2; k >= 0; k--) {
        if (arr[k] < arr[k + 1]) {
            break;
        }
    }

    
    if (k < 0) {
        reverse(arr, 0, n - 1);
        return 0; // No next permutation, array is sorted in descending order
    }


    for (l = n - 1; l > k; l--) {
        if (arr[k] < arr[l]) {
            break;
        }
    }

   
    int temp = arr[k];
    arr[k] = arr[l];
    arr[l] = temp;

 
    reverse(arr, k + 1, n - 1);

    return 1; // Next permutation was found
}

// Function to print the array
void print_array(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int arr[] = {1, 2, 3}; // Example array
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("Original array: ");
    print_array(arr, n);

    if (next_permutation(arr, n)) {
        printf("Next permutation: ");
        print_array(arr, n);
    } else {
        printf("No next permutation, the array is in its last permutation.\n");
    }

    return 0;
}
